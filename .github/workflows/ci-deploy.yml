# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]

jobs:
  test_build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        mongodb-version: ["6.0", "7.0"]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.11.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-username: test
          mongodb-password: test
          mongodb-db: test

      - name: Set MongoDB URI environment variable
        # run: echo "MONGODB_TEST_URI=mongodb://localhost:27017/testdb" >> $GITHUB_ENV
        run: echo "MONGODB_TEST_URI=mongodb+srv://test:test@localhost/test?retryWrites=true&w=majority" >> $GITHUB_ENV

      - run: npm i
      - run: npm run build --if-present
      - run: npm test

  docker-build:
    runs-on: ubuntu-latest
    needs: test_build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/sharepact-backend:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/sharepact-backend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/sharepact-backend:latest

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/sharepact-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Deploy application via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/sharepact-backend:latest
            docker compose down sharepact-backend
            docker compose up -d --force-recreate sharepact-backend
